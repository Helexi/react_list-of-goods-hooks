{"version":3,"sources":["components/GoodList.tsx","App.tsx","index.tsx"],"names":["GoodList","goods","className","map","good","goodsFromServer","App","useState","showList","setShowList","setGoods","type","onClick","value","reverse","sort","a","b","localeCompare","length","ReactDOM","render","document","getElementById"],"mappings":"yNAMaA,EAA2B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzC,OACE,oBAAIC,UAAU,SAAd,SACGD,EAAME,KAAI,SAACC,GAAD,OACT,oBAAeF,UAAU,SAAzB,SACGE,GADMA,SCNXC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAmFaC,EAhFO,WACpB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAASF,GAAnC,mBAAOJ,EAAP,KAAcS,EAAd,KAwBA,OACE,mCACE,qBAAKR,UAAU,MAAf,SACGM,EACC,wBACEN,UAAU,SACVS,KAAK,SACLC,QA7BY,WACpBH,GAAY,SAACI,GAAD,OAAYA,MAyBlB,mBAQA,sBACEX,UAAU,OADZ,UAGE,oBAAIA,UAAU,aAAd,mBACA,cAAC,EAAD,CAAUD,MAAOA,IACjB,gCACE,wBACEC,UAAU,SACVS,KAAK,SACLC,QA7BE,WACdF,GAAS,SAACG,GAAD,OAAW,YAAIA,GAAOC,cAyBrB,qBAOA,wBACEZ,UAAU,SACVS,KAAK,SACLC,QA9Ca,WACzBF,GAAS,SAACG,GAAD,OAAW,YAAIA,GACrBE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,UAyCxB,iCAOA,wBACEf,UAAU,SACVS,KAAK,SACLC,QAvCA,WACZF,EAASL,IAmCC,mBAOA,wBACEH,UAAU,SACVS,KAAK,SACLC,QAvDK,WACjBF,GAAS,SAACG,GAAD,OAAW,YAAIA,GACrBE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,cAkDrB,uCC/EdC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2c70dc78.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodList:React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"App_ul\">\n      {goods.map((good) => (\n        <li key={good} className=\"App_li\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { GoodList } from './components/GoodList';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [showList, setShowList] = useState(true);\n  const [goods, setGoods] = useState(goodsFromServer);\n\n  const startShowList = () => {\n    setShowList((value) => !value);\n  };\n\n  const sortAlphabetically = () => {\n    setGoods((value) => [...value]\n      .sort((a, b) => a.localeCompare(b)));\n  };\n\n  const sortLength = () => {\n    setGoods((value) => [...value]\n      .sort((a, b) => a.length - b.length));\n  };\n\n  const reverse = () => {\n    setGoods((value) => [...value].reverse());\n  };\n\n  const reset = () => {\n    setGoods(goodsFromServer);\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        {showList ? (\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={startShowList}\n          >\n            Start\n          </button>\n        ) : (\n          <div\n            className=\"wrap\"\n          >\n            <h1 className=\"App__title\">Goods</h1>\n            <GoodList goods={goods} />\n            <div>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={reverse}\n              >\n                Reverse\n              </button>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={sortAlphabetically}\n              >\n                Sort alphabetically\n              </button>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={sortLength}\n              >\n                Sort by length\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}